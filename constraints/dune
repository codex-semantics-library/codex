;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  This file is part of the Codex semantics library.                     ;;
;;                                                                        ;;
;;  Copyright (C) 2013-2024                                               ;;
;;    CEA (Commissariat à l'énergie atomique et aux énergies              ;;
;;         alternatives)                                                  ;;
;;                                                                        ;;
;;  you can redistribute it and/or modify it under the terms of the GNU   ;;
;;  Lesser General Public License as published by the Free Software       ;;
;;  Foundation, version 2.1.                                              ;;
;;                                                                        ;;
;;  It is distributed in the hope that it will be useful,                 ;;
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of        ;;
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         ;;
;;  GNU Lesser General Public License for more details.                   ;;
;;                                                                        ;;
;;  See the GNU Lesser General Public License version 2.1                 ;;
;;  for more details (enclosed in the file LICENSE).                      ;;
;;                                                                        ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; -*- mode:lisp -*-

(library
  (public_name "codex.constraints")
  (name Constraints)
  (modules :standard \ relations_test)
  (libraries
    (re_export codex.codex_log)
    (re_export codex.bdd)
    (re_export cudd)
    (re_export codex.condition_map)
    codex.datatype_sig
    codex.immutable_dynamic_array
    codex.utils.immutable_array
    codex.transfer_functions
    zarith
    codex.tracelog
    codex.codex_config
    codex.smtbackend
    codex.treemap
    codex.union_find
    patricia-tree
    codex.framac_ival
    codex.single_value_abstraction))

;; For test purposes only.
(library
  (name RelationsTest)
  (inline_tests)
  (preprocess (pps ppx_inline_test))
  (libraries codex.cuddfix
    codex.constraints codex.transfer_functions codex.union_find
    zarith qcheck-core )
  (modules relations_test)
)
