flexible.c:9.6-12: `0 <= i' -> {0x1}
flexible.c:9.11-12: `i' -> [0..0x7FFFFFFF]
flexible.c:9.16-26: `i < p->len' -> {0; 1}
flexible.c:9.16-17: `i' -> [0..0x7FFFFFFF]
flexible.c:9.20-26: `p->len' -> [1..0x7FFFFFFF]
flexible.c:9.20-21: `p' -> ([1..0xFFFFFFFF] : ({self : vector("#1")[{0}].(0)* | (self != 0)}))
flexible.c:10.5-8: `res' -> ([1..0xFFFFFFFF] : ({self : int(4)[{0}].(0)* | (self != 0)}))
flexible.c:10.11-20: `p->arr[i]' -> [--..--]
flexible.c:10.11-12: `p' -> ([1..0xFFFFFFFF] : ({self : vector("#1")[{0}].(0)* | (self != 0)}))
flexible.c:10.18-19: `i' -> [0..0x7FFFFFFE]
Unproved regular alarms:
Unproved additional alarms:
Proved 3/3 regular alarms
Unproved 0 regular alarms and 0 additional alarms.
Solved 0/0 user assertions, proved 0
