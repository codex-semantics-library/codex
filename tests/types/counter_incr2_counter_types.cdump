counter.c:15.14-16: `*a' -> [0..0x7FFFFFFF]
counter.c:15.15-16: `a' -> {0} or ([1..0xFFFFFFFF] : (Name(nat))[{0}].0*)
counter.c:16.12-14: `*b' -> [0..0x7FFFFFFF]
counter.c:16.13-14: `b' -> {0} or ([1..0xFFFFFFFF] : (Name(nat))[{0}].0*)
counter.c:17.9-13: `init' -> [0..0x7FFFFFFF]
counter.c:18.17-27: `i < length' -> {0; 1}
counter.c:18.17-18: `i' -> [0..0x7FFFFFFF]
counter.c:18.21-27: `length' -> [0..0x7FFFFFFF]
counter.c:19.21-36: `init + i == n' -> {0; 1}
counter.c:19.22-30: `init + i' -> [0..0x7FFFFFFF]
counter.c:19.22-26: `init' -> [0..0x7FFFFFFF]
counter.c:19.29-30: `i' -> [0..0x7FFFFFFE]
counter.c:19.35-36: `n' -> [0..0x7FFFFFFF]
counter.c:20.3-6: `n + 1' -> [1..0x7FFFFFFF]
counter.c:20.3-4: `n' -> [0..0x7FFFFFFF]
counter.c:18.29-32: `i + 1' -> [1..0x7FFFFFFF]
counter.c:18.29-30: `i' -> [0..0x7FFFFFFE]
Unproved regular alarms:
counter.c:15: Memory_access(*a, read) {true;false}
counter.c:16: Memory_access(*b, read) {true;false}
Unproved additional alarms:
Proved 0/2 regular alarms
Unproved 2 regular alarms and 0 additional alarms.
counter.c:19: assertion is TRUE (valid) (proved with smt solving)
Solved 1/1 user assertions, proved 1
