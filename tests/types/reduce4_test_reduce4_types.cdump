reduce4.c:13.9-19: `tree->root' -> ([1..0xFFFFFFFF] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
reduce4.c:13.9-13: `tree' -> ([1..0xFFFFFFFF] : ({self : Name(struct rbtree)[{0}].(0)* | (self != 0)}))
reduce4.c:14.6-17: `node->right' -> ([1..0xFFFFFFFF] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
reduce4.c:14.6-10: `node' -> ([1..0xFFFFFFFF] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
reduce4.c:15.2-6: `node' -> ([1..0xFFFFFFFB] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
reduce4.c:15.16-26: `root->left' -> {0} or ([1..0xFFFFFFFF] : (Name(struct rbnode))[{0}].0*)
reduce4.c:15.16-20: `root' -> ([1..0xFFFFFFFF] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
reduce4.c:16.6-16: `root->left' -> {0} or ([1..0xFFFFFFFF] : (Name(struct rbnode))[{0}].0*)
reduce4.c:16.6-10: `root' -> ([1..0xFFFFFFFF] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
reduce4.c:17.4-5: `n' -> ([1..0xFFFFFFFF] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
reduce4.c:17.14-18: `node' -> ([1..0xFFFFFFFB] : ({self : Name(struct rbnode)[{0}].(0)* | (self != 0)}))
Unproved regular alarms:
Unproved additional alarms:
Proved 6/6 regular alarms
Unproved 0 regular alarms and 0 additional alarms.
Solved 0/0 user assertions, proved 0
