string.c:38.14-26: `(int *)str->content' -> ([1..0xFFFFFFFF] :
                                              ({self : char(1)[[2..0x7FFFFFFF]][{0}].(0)* | (self != 0)}))
string.c:38.14-26: `str->content' -> ([1..0xFFFFFFFF] :
                                       ({self : char(1)[[2..0x7FFFFFFF]][{0}].(0)* | (self != 0)}))
string.c:38.14-17: `str' -> ([1..0xFFFFFFFF] : ({self : Name(string)[{0}].(0)* | (self != 0)}))
string.c:39.13-17: `init' -> ([1..0xFFFFFFFF] :
                               ({self : char(1)[[2..0x7FFFFFFF]][{0}].(0)* | (self != 0)}))
string.c:40.14-25: `str->length' -> [2..0x7FFFFFFF]
string.c:40.14-17: `str' -> ([1..0xFFFFFFFB] : ({self : Name(string)[{0}].(0)* | (self != 0)}))
string.c:41.13-26: `init + length' -> ([9..0xFFFFFFFF] :
                                        ({self : char(1)[[2..0x7FFFFFFF]][[-0x80000000..0x7FFFFFFC],0%4].(0)* |
                                          (self != 0)}))
string.c:41.13-17: `init' -> ([1..0xFFFFFFFF] :
                               ({self : char(1)[[2..0x7FFFFFFF]][{0}].(0)* | (self != 0)}))
string.c:41.20-26: `length' -> [2..0x7FFFFFFF]
string.c:42.14-20: `length' -> [2..0x7FFFFFFF]
string.c:42.22-27: `i > 0' -> {0; 1}
string.c:42.22-23: `i' -> [0..0x7FFFFFFF]
string.c:43.21-37: `end - i == ptr' -> {0; 1}
string.c:43.22-29: `end - i' -> ([0..0xFFFFFFFB] :
                                  ({self : char(1)[[2..0x7FFFFFFF]][[-0x80000000..0x7FFFFFFC],0%4].(0)* |
                                    (self != 0)}))
string.c:43.22-25: `end' -> ([9..0xFFFFFFFF] :
                              ({self : char(1)[[2..0x7FFFFFFF]][[-0x80000000..0x7FFFFFFC],0%4].(0)* |
                                (self != 0)}))
string.c:43.28-29: `i' -> [1..0x7FFFFFFF]
string.c:43.34-37: `ptr' -> ([1..0xFFFFFFFF] :
                              ({self : char(1)[[2..0x7FFFFFFF]][[0..0x7FFFFFFC],0%4].(0)* | (self != 0)}))
string.c:44.3-6: `ptr' -> ([1..0xFFFFFFFB] :
                            ({self : char(1)[[2..0x7FFFFFFF]][[0..0x7FFFFFFC],0%4].(0)* | (self != 0)}))
string.c:45.2-7: `ptr + 1' -> ([1..0xFFFFFFFB] :
                                ({self : char(1)[[2..0x7FFFFFFF]][[0..0x7FFFFFFC],0%4].(0)* | (self != 0)})) + 0x4
string.c:45.2-5: `ptr' -> ([1..0xFFFFFFFB] :
                            ({self : char(1)[[2..0x7FFFFFFF]][[0..0x7FFFFFFC],0%4].(0)* | (self != 0)}))
string.c:42.29-32: `i - 1' -> [0..0x7FFFFFFE]
string.c:42.29-30: `i' -> [1..0x7FFFFFFF]
Unproved regular alarms:
Unproved additional alarms:
+ string.c:44 : { *ptr = 0; } -> store_param_nonptr ;
Proved 3/3 regular alarms
Unproved 0 regular alarms and 1 additional alarms.
string.c:43: assertion is FALSE (counter-example exists) (proved with smt solving)
Solved 1/1 user assertions, proved 0
