string.c:61.14-26: `str->content' -> {0} or ([1..0xFFFFFFFF] : (anyIntegerType(1))[{0}].0*)
string.c:61.14-17: `str' -> {0} or ([1..0xFFFFFFFF] : (Name(struct string))[{0}].0*)
string.c:63.8-23: `i < str->length' -> {0; 1}
string.c:63.8-9: `i' -> [0..0x7FFFFFFF]
string.c:63.12-23: `str->length' -> [--..--]
string.c:63.12-15: `str' -> ([1..0xFFFFFFFB] : (Name(struct string))[{0}].0*)
string.c:64.2-5: `ptr + i' -> [0..0x7FFFFFFE] or ([1..0xFFFFFFFF] :
                                                   (anyIntegerType(1))[{0}].0* + [0..0x7FFFFFFE])
string.c:64.2-5: `ptr' -> {0} or ([1..0xFFFFFFFF] : (anyIntegerType(1))[{0}].0*)
string.c:64.6-7: `i' -> [0..0x7FFFFFFE]
string.c:65.2-5: `i + 1' -> [1..0x7FFFFFFF]
string.c:65.2-3: `i' -> [0..0x7FFFFFFE]
Unproved regular alarms:
string.c:61: Memory_access(str->content, read) {true;false}
string.c:64: Memory_access(*(ptr + i), write) {true;false}
Unproved additional alarms:
+ string.c:64 : { *(ptr + i) = (char)'0'; } -> store_param_nonptr ;
Proved 1/3 regular alarms
Unproved 2 regular alarms and 1 additional alarms.
Solved 0/0 user assertions, proved 0
